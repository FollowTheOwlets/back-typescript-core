name: Build & Deploy WriterSide (with Pagefind + theme overrides)

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  # Инстанс из writerside.cfg
  INSTANCE: "Writerside/back-typescript"

  # === Цвета (можно менять под себя) ===
  # Светлая тема
  LIGHT_PRIMARY: "#C14424"
  LIGHT_BG: "#ffffff"
  LIGHT_TEXT: "#111111"
  LIGHT_HEADER_BG: "#f6f7f9"
  LIGHT_ON_PRIMARY: "#ffffff"
  # Тёмная тема
  DARK_PRIMARY: "#FF7A59"
  DARK_BG: "#1f1f1f"
  DARK_TEXT: "#eeeeee"
  DARK_HEADER_BG: "#2a2a2a"
  DARK_ON_PRIMARY: "#000000"

# Отменять старые прогоны для той же ветки
concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build docs via WriterSide
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}

      - name: Upload artifact (whole artifacts dir)
        uses: actions/upload-artifact@v4
        with:
          name: writerside
          path: artifacts/
          retention-days: 7

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: writerside
          path: artifacts

      - name: Check build report
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: writerside
          path: artifacts

      - name: Find site zip
        id: findzip
        shell: bash
        run: |
          set -e
          SITE_ZIP=$(ls artifacts/webHelp*2-all.zip | head -n1 || true)
          if [ -z "$SITE_ZIP" ]; then
            echo "❌ Site zip not found (pattern: artifacts/webHelp*2-all.zip)"; exit 1;
          fi
          echo "site_zip=$SITE_ZIP" >> "$GITHUB_OUTPUT"

      - name: Unzip website
        run: unzip -O UTF-8 -qq "${{ steps.findzip.outputs.site_zip }}" -d site

      # ---------- Pagefind: статический бесплатный поиск ----------
      - name: Build static search index (Pagefind)
        run: |
          if ! command -v npm >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y nodejs npm
          fi
          # Кладём bundle в сам сайт, чтобы пути работали на Pages
          npx --yes pagefind --source site --bundle-dir pagefind

      - name: Verify Pagefind assets
        run: ls -lah site/pagefind

      # ---------- Тема: переопределяем цвета для светлой/тёмной тем ----------
      - name: Add theme overrides CSS (light/dark)
        shell: bash
        run: |
          cat > site/theme-overrides.css <<'CSS'
          /* Общие CSS-переменные — используем для наших оверлеев/кнопок и части базовых элементов */
          :root {
            --pf-modal-backdrop: rgba(0,0,0,.45);
          }
          @media (prefers-color-scheme: light) {
            :root {
              --bg: {{LIGHT_BG}};
              --fg: {{LIGHT_TEXT}};
              --primary: {{LIGHT_PRIMARY}};
              --header-bg: {{LIGHT_HEADER_BG}};
              --on-primary: {{LIGHT_ON_PRIMARY}};
            }
          }
          @media (prefers-color-scheme: dark) {
            :root {
              --bg: {{DARK_BG}};
              --fg: {{DARK_TEXT}};
              --primary: {{DARK_PRIMARY}};
              --header-bg: {{DARK_HEADER_BG}};
              --on-primary: {{DARK_ON_PRIMARY}};
            }
          }

          /* Базовая перекраска */
          body { background: var(--bg) !important; color: var(--fg) !important; }
          a, a:visited { color: var(--primary) !important; }

          /* Шапка/toolbar (подбираем наиболее частые классы WriterSide) */
          .header, .jb-header, header[role="banner"] { background: var(--header-bg) !important; }
          .jb-header a, .header a { color: var(--fg) !important; }

          /* Кнопки, в т.ч. наша кнопка поиска */
          .btn, button, .pf-btn, #pf-trigger {
            background: var(--primary) !important;
            color: var(--on-primary) !important;
            border-color: var(--primary) !important;
          }

          /* Подсветка выбранных элементов/ссылок в оглавлении (best-effort) */
          .active, .selected, .current, .nav .active > a { color: var(--primary) !important; }

          /* Модалка Pagefind */
          #pf-modal { background: var(--pf-modal-backdrop) !important; }
          #pf-modal .pf-dialog { background: var(--bg) !important; color: var(--fg) !important; }
          #pf-modal a { color: var(--primary) !important; }
          CSS
      # ---------- Модалка/хоткей Ctrl+K + кнопка; корректные пути на Pages ----------
      - name: Add Pagefind modal script (absolute basePath) and inject into pages
        shell: bash
        run: |
          cat > site/pagefind-inline.js <<'JS'
          (function () {
            const STYLE_ID = 'pf-inline-style';
            const MODAL_ID = 'pf-modal';
            const BTN_ID = 'pf-trigger';
            // "/<repo>/" для проектных страниц или "/" для user/org домена
            const basePath = (function(){ const seg = location.pathname.split('/')[1]; return seg ? `/${seg}/` : '/'; })();

            function ensureStyle() {
              if (document.getElementById(STYLE_ID)) return;
              const s = document.createElement('style'); s.id = STYLE_ID;
              s.textContent = `
                #${MODAL_ID}{position:fixed;inset:0;display:none;z-index:2147483647;background:var(--pf-modal-backdrop, rgba(0,0,0,.45))}
                #${MODAL_ID}.open{display:block}
                #${MODAL_ID} .pf-dialog{box-sizing:border-box;position:relative;margin:8vh auto;max-width:960px;width:92%;
                  background:var(--bg,#fff);color:var(--fg,#111);border-radius:12px;padding:16px 16px 8px;box-shadow:0 20px 60px rgba(0,0,0,.35)}
                #${BTN_ID}{position:fixed;right:16px;top:12px;z-index:2147483646;opacity:.85;backdrop-filter:saturate(180%) blur(6px);
                  border-radius:8px;border:1px solid rgba(255,255,255,.25);padding:6px 10px;font:500 13px/1 system-ui,-apple-system,Segoe UI,Roboto,Arial;cursor:pointer;
                  background:var(--primary,#3b82f6);color:var(--on-primary,#fff);border-color:var(--primary,#3b82f6)}
                #${BTN_ID}:hover{opacity:1}
              `;
              document.head.appendChild(s);
            }

            function ensureModal() {
              if (document.getElementById(MODAL_ID)) return;
              const m = document.createElement('div'); m.id = MODAL_ID;
              m.innerHTML = `<div class="pf-dialog"><div id="pf-ui"></div></div>`;
              m.addEventListener('click', (e)=>{ if(e.target===m) close(); });
              document.body.appendChild(m);
            }

            function ensureButton() {
              if (document.getElementById(BTN_ID)) return;
              const b = document.createElement('button'); b.id = BTN_ID; b.type='button'; b.title='Ctrl+K';
              b.textContent = 'Ctrl+K for search'; b.addEventListener('click', open); document.body.appendChild(b);
            }

            function open(e){
              if (e) e.preventDefault();
              ensureModal();
              const modal = document.getElementById(MODAL_ID);
              modal.classList.add('open');
              if (!window.__pf_ui_inited) {
                window.__pf_ui_inited = true;
                if (!document.querySelector('link[href*="pagefind-ui.css"]')) {
                  const l = document.createElement('link'); l.rel='stylesheet'; l.href = basePath + 'pagefind/pagefind-ui.css'; document.head.appendChild(l);
                }
                new PagefindUI({ element: '#pf-ui', showSubResults: true, translations: { placeholder: 'Поиск…' } });
                setTimeout(() => { document.querySelector('#pf-ui input')?.focus(); }, 0);
              } else {
                document.querySelector('#pf-ui input')?.focus();
              }
            }

            function close(){ document.getElementById(MODAL_ID)?.classList.remove('open'); }
            function keyHandler(e){ if ((e.ctrlKey||e.metaKey) && /k/i.test(e.key)) { e.preventDefault(); open(e); } if (e.key==='Escape') close(); }

            function init(){
              ensureStyle(); ensureModal(); ensureButton();
              window.addEventListener('keydown', keyHandler, { passive: false });
            }

            function ensurePagefind(cb){
              if (window.PagefindUI) { cb(); return; }
              const s = document.createElement('script'); s.defer=true; s.src = basePath + 'pagefind/pagefind-ui.js';
              s.onload = cb; document.head.appendChild(s);
            }

            if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', () => ensurePagefind(init));
            } else {
              ensurePagefind(init);
            }
          })();
          JS

          # Лоадер, подключающий pagefind-inline.js из корня сайта — корректно и на внутренних URL
          find site -type f -name "*.html" -print0 | xargs -0 -I{} sh -c \
            'grep -q "LOAD_PF_INLINE" "{}" || sed -i "s#</body>#<script>/*LOAD_PF_INLINE*/(function(){var seg=location.pathname.split(\x27/\x27)[1];var base=seg? \x27/\x27+seg+\x27/\x27 : \x27/\x27;var s=document.createElement(\x27script\x27);s.defer=true;s.src=base+\x27pagefind-inline.js\x27;document.body.appendChild(s);}());</script></body>#" "{}"'

      # (опционально) отдельная страница поиска, тоже с корректными путями
      - name: Add /search.html (works under project subpath)
        shell: bash
        run: |
          cat > site/search.html <<'HTML'
          <!doctype html>
          <html lang="en">
          <head>
            <meta charset="utf-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1"/>
            <title>Search</title>
            <link rel="stylesheet" href="./theme-overrides.css">
            <script>
              (function(){ window.__PF_BASE__ = (function(){ const seg = location.pathname.split('/')[1]; return seg ? '/' + seg + '/' : '/'; })(); })();
              document.write('<link rel="stylesheet" href="' + window.__PF_BASE__ + 'pagefind/pagefind-ui.css">');
            </script>
            <script defer id="pf-ui-js"></script>
            <script>
              (function(){ document.getElementById('pf-ui-js').src = window.__PF_BASE__ + 'pagefind/pagefind-ui.js'; })();
            </script>
            <style>body{margin:2rem auto;max-width:960px;font-family:system-ui,sans-serif}</style>
          </head>
          <body>
            <h1>Search</h1>
            <div id="search"></div>
            <script>
              window.addEventListener('DOMContentLoaded', function () {
                new PagefindUI({ element: "#search", showSubResults: true, translations: { placeholder: "Поиск…" } });
              });
            </script>
          </body>
          </html>
          HTML

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
